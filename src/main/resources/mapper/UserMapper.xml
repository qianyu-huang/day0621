<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lening.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.lening.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
  </resultMap>
  
  <!-- UserVo 配置一对多，一个用户对应多个角色 -->
   <resultMap id="UserVo" type="com.lening.vo.UserVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    
   <!--  <collection property="roleList" ofType="com.lening.pojo.Role" javaType="list" >
    	
    	  <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    	 
    </collection> -->
    
     <result column="roleInfo" jdbcType="VARCHAR" property="roleInfo" />
  </resultMap>
  
  
  <sql id="Base_Column_List">
    id, username, password, realname, sex
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 用户全查 -->
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
  </select>
  
  <!-- 用户详细信息全查 -->
    <select id="findVo" resultMap="UserVo">
  <!--  SELECT
		u.*,r.role_name
	FROM
		user u
	LEFT JOIN user_role ur ON ur.user_id = u.id
	LEFT JOIN role r on ur.role_id = r.id -->
	
	SELECT
		u.*,GROUP_CONCAT(r.role_name) roleInfo
	FROM
		USER u
	LEFT JOIN user_role ur ON u.id = ur.user_id
	LEFT JOIN role r on ur.role_id=r.id
	GROUP BY u.id
	

  </select>
  
  <!-- 根据用户名查询记录 -->
    <select id="findByUsername" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 配置获取自增的id值 -->
  <insert id="insert" parameterType="com.lening.pojo.User" keyProperty="id" useGeneratedKeys="true">
    insert into user (id, username, password, 
      realname, sex)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.lening.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lening.pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lening.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>